#include "LightTimerController.h"

LightTimerController::LightTimerController()
{
  this->button.attachClick(bind(&LightTimerController::buttonClickHandler, this));
  this->mqttNode.attachStatus(bind(&LightTimerController::mqttStatusHandler, this, _1));
}

LightTimerController::LightTimerController(const char* id, int lightPin, int buttonPin, unsigned long milis)
: LightController(id, lightPin, buttonPin)
, timer(milis, bind(&LightTimerController::timerHandler, this))
{
  this->button.attachClick(bind(&LightTimerController::buttonClickHandler, this));
  this->mqttNode.attachStatus(bind(&LightTimerController::mqttStatusHandler, this, _1));
}

void LightTimerController::buttonClickHandler(){
  if (!this->light.isActive()){
    this->on();
  }
  this->timer.enable();
}

void LightTimerController::mqttStatusHandler(bool active){
  if(active){
    this->on();
  } else {
    this->off();
  }
}

void LightTimerController::timerHandler(){
  this->off();
}

void LightTimerController::off(){
  LightController::off();
  this->timer.disable();
}

void LightTimerController::on(){
  LightController::on();
  this->timer.enable();
}


void LightTimerController::loop(){
  LightController::loop();
  this->timer.check();
}
