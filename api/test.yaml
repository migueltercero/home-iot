openapi: 3.0.0
servers:
  - url: ''
    description: desarrollo
info:
  description: Catálogo de servicios de 
  version: 1.0.0
  title: 
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: DomainRS
    description: Recurso que especifica los dominios del sistema
  - name: CodeSystem
    description: Recurso que especifica los catálogos del sistema
paths:
  /DomainRS:
    get:
      tags:
        - DomainRS
      summary: Obtención de todos los dominios
      description: >-
        Se obtendrá un listado con todos los dominios dados de alta en el
        sistema. Se puede consultar el apartado Models para ver la estructura de
        los objetos DomainRS devueltos.
      responses:
        '200':
          description: Operación correcta
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Bundle-DomainRS'
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle-DomainRS'
              examples:
                all:
                  summary: todos
                  value:
                    id: c903e8db-f9e4-4d9a-8710-5a7d1ea0b888
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - read
  '/DomainRS/{id}':
    get:
      tags:
        - DomainRS
      summary: Consulta un dominio por su identificador.
      description: Consulta detallada de un dominio a partir de su identificador.
      parameters:
        - name: id
          in: path
          description: >-
            Identificador del dominio a partir del cual se realiza la búsqueda.
            Se devuelve un objeto DomainRS con el identificador proporcionado en
            la consulta. Se puede ver la estructura de DomainRS en el apartado
            Models.
          required: true
          schema:
            type: string
          example: 102
      responses:
        '200':
          description: Operación correcta
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainRS'
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRS-Search'
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - read
    put:
      tags:
        - DomainRS
      summary: Actualización de un dominio
      description: >-
        Dado un identificador de dominio en la url de la petición y un objeto
        DomainRS en el cuerpo de la misma, se podrá actualizar el nombre del
        dominio.      
      parameters:
        - name: id
          in: path
          description: Identificador del dominio
          required: true
          schema:
            type: string
          example: 101
      requestBody:
        description: Objeto DomainRS que vamos a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRS-Put'
            examples:
              simple:
                summary: dominio reducido
                value:
                  id: 1
                  name: domain1
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainRS-Put'
      responses:
        '200':
          description: Operación correcta
        '404':
          description: 'Error: dominio no encontrado'
      security:
        - keycloak:
            - write
    delete:
      tags:
        - DomainRS
      summary: Elimina un dominio
      description: >-
        Operación que eliminará un dominio del sistema, cuyo identificador es
        proporcionado en la url de la petición.
      parameters:
        - name: id
          in: path
          description: Identificador del dominio
          required: true
          schema:
            type: string
      responses:
        default:
          description: Operación correcta
      security:
        - keycloak:
            - write
    post:
      tags:
        - DomainRS
      summary: Creación de un dominio
      description: >-
        Operación para dar de alta un dominio en la aplicación. El objeto
        dominio que vamos a crear se envia en el cuerpo de la petición. Se puede
        consultar el apartado Models para ver la estructura de los objetos
        DomainRS.
      responses:
        default:
          description: Operación correcta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRS'
        description: Objeto DomainRS que vamos a crear.
        required: true
      security:
        - keycloak:
            - write
  /CodeSystem:
    get:
      tags:
        - CodeSystem
      summary: Obtención de todos los catálogos
      description: >-
        Se obtendrá un listado con todos los catálogos dados de alta en el
        sistema. Se puede consultar el apartado Models para ver la estructura de
        los objetos CodeSystem devueltos.
      responses:
        '200':
          description: Operación correcta
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Bundle-DomainRS'
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle-DomainRS'
              examples:
                all:
                  summary: todos
                  value:
                    id: c903e8db-f9e4-4d9a-8710-5a7d1ea0b888
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - read
  /CodeSystem/$lookup:
    get:
      tags:
        - CodeSystem
      summary: Operación lookup de un catálogo.
      description: >-
        Consulta que busca un elemento dentro de un catálogo. Como respuesta
        devuelve el item con todos sus campos básicos y sus datos adicionales.
        En la consulta podemos solicitar que campos adicionales queremos
        obtener, de manera que obtengamos en el resultado sólo los datos
        adicionales que hemos pedido. En el parameter con name=code, se envia el
        código del item, y en el parameter con name=system se envia el código
        del catálogo. Se envian tantos parameter con name=property como datos
        adicionales queramos recuperar. Si no se envia ninguno, se recuperan
        todos.
      parameters:
        - name: Parameters
          in: query
          description: >-
            {resourceType : Parameters,parameter : [{name : code,valueString :
            PI},{name : system,valueString :tipo_documento},{name :
            property,valueString : Sistema Emisor}]}
          required: true
          schema:
            type: string
            example: >-
              {resourceType : Parameters,parameter : [{name : code,valueString :
              PI},{name : system,valueString :tipo_documento}]}
      responses:
        '200':
          description: Operación correcta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lookup-Respuesta'
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - read
  '/CodeSystem/{id}':
    get:
      tags:
        - CodeSystem
      summary: Consulta un catálogo por su identificador.
      description: >-
        Consulta detallada de un catálogo a partir de su identificador. Se
        devuelve un objeto CodeSystem (ver estructura en el apartado Models)
      parameters:
        - name: id
          in: path
          description: Identificador del catálogo a partir del cual se realiza la búsqueda.
          required: true
          schema:
            type: string
          example: 102
      responses:
        '200':
          description: Operación correcta
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeSystem'
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSystem'
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - read
    post:
      tags:
        - CodeSystem
      summary: Creación de un catálogo
      description: >-
        Operación para dar de alta un catálogo en la aplicación. El objeto
        catálogo que vamos a crear se envia en el cuerpo de la petición. Se
        puede consultar el apartado Models para ver la estructura de los objetos
        CodeSystem.
      responses:
        default:
          description: Operación correcta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeSystem-Post'
        description: Objeto CodeSystem que vamos a crear.
        required: true
      security:
        - keycloak:
            - write
    delete:
      tags:
        - CodeSystem
      summary: Elimina un catálogo
      description: >-
        Operación que eliminará un catálogo del sistema, cuyo identificador es
        proporcionado en la url de la petición. Sólo se podrán eliminar
        catálogos que esten en el estado pasivo.
      parameters:
        - name: id
          in: path
          description: Identificador del catálogo
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Operación correcta
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - write
  '/CodeSystem/{id}/$compose':
    get:
      tags:
        - CodeSystem
      summary: Operación compose de un catálogo.
      description: >-
        Filtrar por los datos adicionales los elementos de un catálogo. Se
        devuleve todos los datos adicionales que cumplen con el filtro
      parameters:
        - name: Parameters
          in: query
          description: >-
            Se envian tantos parametros con name property como parametros de
            busqueda queramos enviar. Por cada parametro se envian dos partes,
            una con el código del parámetro adicional por el que queremos buscar
            y otra con el valor. En el ejemplo hacemos una busqueda en el
            catálogo tipo_documento (lo enviamos en el id de la peticion), por
            dato adicional orden de preferencia = 1
          required: true
          schema:
            type: string
            example: >-
              <Parameters xmlns=http://hl7.org/fhir><parameter><name
              value=property/><part><name value=code/><valueString value=Orden
              de Preferencia/></part><part><name value=value/><valueString
              value=1/></part></parameter></Parameters>
      responses:
        '200':
          description: Operación correcta
          content:
            application/json:
              schema:
                example: ''
        '500':
          description: Error al realizar la operación
      security:
        - keycloak:
            - read
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Resource:
      type: object
      required:
        - id
      properties:
        resourceType:
          type: string
        id:
          type: string
      discriminator:
        propertyName: resourceType
    DomainRS:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            code:
              type: string
              description: código del recurso
            name:
              type: string
              description: descripción del recurso
    DomainRS-Put:
      allOf:
        - $ref: '#/components/schemas/DomainRS'
        - required:
            - name
            - code
    DomainRS-Search:
      allOf:
        - $ref: '#/components/schemas/DomainRS'
        - example:
            id: 2
            code: code
            name: name
    Bundle:
      allOf:
        - $ref: '#/components/schemas/Resource'
          type: object
          properties:
            id:
              type: object
              description: identificador único del recurso
              properties:
                value:
                  type: integer
                  xml:
                    attribute: true
          xml:
            name: Bundle
    Bundle-DomainRS:
      allOf:
        - $ref: '#/components/schemas/Bundle'
        - type: object
          properties:
            entry:
              type: object
              properties:
                resource:
                  $ref: '#/components/schemas/DomainRS'
          example:
            resourceType: Bundle
            id: 100
            entry:
              - fullUrl: 'http://dsfasfdsaf <http://dsfasfdsaf/>'
                resource:
                  id: 102
                  code: domain1
                  name: domain 1
    CodeSystem:
      type: object
      properties:
        id:
          type: number
          description: Identificador del catálogo
        identifier:
          type: string
          description: Código del catálogo
        version:
          type: string
          description: Versión  del catálogo
        name:
          type: string
          description: Nombre del catálogo
        status:
          type: string
          description: 'Estado del catálogo: draft | active | retired | unknown'
        date:
          type: string
          description: Fecha del último cambio
        description:
          type: string
          description: Descripción del catálogo
        count:
          type: number
          description: Número de elementos del catálogo
        useContext:
          type: array
          description: >-
            Lista de objetos UseContext para almacenar los dominios y los labels
            del catálogo. En el alta de un catálogo será obligatorio enviar al
            menos un dominio (coding=domains)
        property:
          type: array
          description: >-
            Lista de objetos PropertyCodeSystem para almacenar los datos
            adicionales del catálogo.
        concept:
          type: array
          description: Lista de objetos Concept con los conceptos del catálogo
    Lookup-Respuesta:
      type: object
      example:
        resourceType: Parameters
        parameter:
          - name: name
            valueString: Identificador de Sistema Externo
          - name: version
            valueString: '0'
          - name: display
          - name: designation
          - name: Orden de Preferencia
            valueInteger: '1'
          - name: Reglas de Validacion
            valueBoolean: 'false'
          - name: Sistema Emisor
            valueString: UHN/HAPI Server (DSTU2 FHIR)
    CodeSystem-Post:
      allOf:
        - $ref: '#/components/schemas/CodeSystem'
        - required:
            - identifier
            - name
            - status
            - catalog-type
            - useContext
      description: CodeSytem utilizado para el alta de un catálogo
    Concept:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Código del concepto
        display:
          type: string
          description: Nombre del concepto
        definition:
          type: string
          description: Definición del concepto
        designation:
          type: string
          description: Designación del concepto
        property:
          type: array
          description: >-
            Lista de objetos de tipo ConceptProperty, que almacena los datos
            adicionales de un concepto.
    ConceptProperty:
      type: object
      required:
        - code
        - value
      properties:
        code:
          type: string
          description: Código del dato adicional
        value:
          type: string
          description: Valor del dato adicional
    UseContext:
      type: object
      required:
        - coding
        - text
      properties:
        coding:
          type: object
          description: >-
            Atributo de tipo Coding. Código que especifica el tipo de contexto
            que puede ser: domains | labels
        text:
          type: string
          description: >-
            si coding=domains, Código del dominio. Tiene que existir un dominio
            con ese código. Si coding=labels, Nombre de la etiqueta. Si no
            existe ls etiqueta, se crea una con ese nomnbre.
    PropertyCodeSystem:
      type: object
      required:
        - code
        - type
        - required
      properties:
        code:
          type: string
          description: Código que identifica a la propiedad
        uri:
          type: string
          description: Identificador formal para la propiedad
        description:
          type: string
          description: Descripción de la propiedad
        type:
          type: string
          description: >-
            Tipo de propiedad. Puede tomar los valores: code | Coding | string |
            integer | boolean | dateTime
        required:
          type: object
          description: >-
            Extensión de tipo boolean, con url
            http://hn.indra.es/fhir/catalog/additional-data/required y que
            especifica si la propiedad es o no obligatoria (true|false).
    Extension:
      type: object
      required:
        - url
        - value
      properties:
        url:
          type: string
          description: url que identifica la extensión
        value:
          type: string
          description: valor de la extensión
    Coding:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: código
    Identifier:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          description: Valor del identificador
    MetFieldTypeRS:
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        code:
          type: string
          description: Código del dato adicional
        name:
          type: string
          description: Nombre del dato adicional
        description:
          type: string
          description: Descripción del dato adicional
    MetFieldTypeRS-Post:
      allOf:
        - $ref: '#/components/schemas/MetFieldTypeRS'
        - required:
            - id
      description: >-
        CodeSytem utilizado para el alta de un concepto. Sólo es necesario
        enviar su identificador.
    AdditionalCatalogFieldRS:
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        flgMandatory:
          type: string
          description: Valor booleano que indica si el campo es obligatorio
        fieldType:
          $ref: '#/components/schemas/MetFieldTypeRS'
  securitySchemes:
    keycloak:
      type: oauth2
      description: autenticacion con keycloak
      flows:
        password:
          tokenUrl: >-
            
          scopes:
            read: read
            write: write
